{"version":3,"sources":["../node_modules/gun sync","Vertex.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Vertex","MyResponsiveBubble","root","margin","top","right","bottom","left","identity","colorBy","label","d","data","value","colors","scheme","padding","labelSkipRadius","labelTextColor","borderWidth","borderColor","from","defs","type","background","color","rotation","lineWidth","spacing","fill","match","depth","animate","motionStiffness","motionDamping","require","gunListeners","Set","vertices","props","edges","getRootData","graph","valuesEnabled","newGraph","loc","nodes","node","innerNodes","split","currObj","i","innerNode","currCurrObj","children","find","x","label2","length","fullPath","name","propsText","JSON","stringify","replace","Object","filter","App","useState","links","setGraph","endpoint","setEndpoint","setRoot","Gun","gun","setGun","useEffect","forEach","soul","get","off","delete","setValuesEnabled","console","log","_","opt","peers","reduce","a","b","getPath","path","currentReference","addGunListener","has","on","handleNodeChange","change","add","removeUnreferencedNode","index","findIndex","edge","target","removeNode","warn","nodeId","error","splice","oldNodes","oldLinks","idx","newProps","newVertices","newEdges","propsToRemove","prop","childEdgeIndex","source","propVal","undefined","newNodeSoul","push","p","includes","getDataFromGun","parentId","async","Promise","reject","once","nodeProperties","childSoul","vertex","childGraph","window","className","onChange","ev","onClick","insertDataFromGun","style","height","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e4fee7c.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 264;","import './Vertex.css';\n\nimport React from 'react';\n\nfunction Vertex({ node }) {\n\tconst containerStyle = {\n\t\tdisplay: 'flex',\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t};\n\n\tconst vertexStyle = {\n\t\tfontSize: '5px',\n\t\tbackgroundColor: '#FFF',\n\t\tborder: '1px solid #CCC',\n\t};\n\n\tconst renderProp = (prop) => {\n\t\tif (prop.value === null) return;\n\t\treturn (\n\t\t\t<div key={prop.name}>\n\t\t\t\t<code>\n\t\t\t\t\t{prop.name}: {prop.value + ''}\n\t\t\t\t</code>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst renderProps = (props) => {\n\t\tlet renderedProps = [];\n\t\tfor (let prop in props) {\n\t\t\trenderedProps.push(renderProp({ name: prop, value: props[prop] }));\n\t\t}\n\t\treturn renderedProps;\n\t};\n\n\treturn (\n\t\t<div style={containerStyle}>\n\t\t\t<div className=\"vertex\" style={vertexStyle}>\n\t\t\t\t<h3>{node.id}</h3>\n\t\t\t\t{renderProps(node.props)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Vertex;\n","import './App.css';\n\nimport Gun from 'gun';\nimport React, { useEffect, useState } from 'react';\nimport { Graph } from 'react-d3-graph';\n\nimport Vertex from './Vertex';\n\nimport { ResponsiveBubble } from '@nivo/circle-packing'\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\nconst MyResponsiveBubble = ({ root /* see root tab */ }) => (\n  <ResponsiveBubble\n    root={root}\n    margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n    identity=\"name\"\n    colorBy=\"depth\"\n    label={(d) => d.data.label}\n    value=\"loc\"\n    colors={{ scheme: 'spectral' }}\n    padding={0}\n    labelSkipRadius={0}\n    labelTextColor=\"black\"\n    borderWidth={2}\n    borderColor={{ from: 'color' }}\n    defs={[\n      {\n        id: 'lines',\n        type: 'patternLines',\n        background: 'none',\n        color: 'inherit',\n        rotation: -75,\n        lineWidth: 5,\n        spacing: 8\n      }\n    ]}\n    fill={[{ match: { depth: 1 }, id: 'lines' }]}\n    animate={true}\n    motionStiffness={90}\n    motionDamping={12}\n  />\n)\n\n\n// const gun = new Gun('http://192.168.178.64:8765/gun');\nrequire('gun/lib/open.js');\n\nlet gunListeners = new Set();\n\nconst vertices = [{ id: 'gun', props: { root: '' } }];\nconst edges = [];\n\nfunction App() {\n  const [graph, setGraph] = useState({\n    nodes: vertices,\n    links: edges,\n  });\n\n  const [endpoint, setEndpoint] = useState('http://localhost:8765/gun');\n\n  const [root, setRoot] = useState('Fluke');\n\n  const [gun, setGun] = useState(new Gun());\n\n  useEffect(() => {\n    gunListeners.forEach((soul) => {\n      gun.get(soul).off();\n      gunListeners.delete(soul);\n    });\n  }, [gun]);\n\n  const [valuesEnabled, setValuesEnabled] = useState(true);\n\n  const toggleValues = () => {\n    setValuesEnabled(!valuesEnabled);\n  }\n\n  const loadEndpoint = () => {\n    setGun(new Gun(endpoint));\n    setGraph((graph) => {\n      return {\n        nodes: vertices,\n        links: edges,\n      };\n    });\n    window.gun = gun;\n  };\n\n  useEffect(() => {\n    console.log(\n      `Peers set to: ${\n        Object.keys(gun._.opt.peers).length > 0\n          ? Object.keys(gun._.opt.peers).reduce(\n          (a, b) => a + ', ' + b\n          )\n          : 'No peers connected'\n      }`\n    );\n  }, [gun]);\n\n  const getPath = (path) => {\n    let currentReference = gun;\n    for (let i = 0; i < path.length; i++) {\n      currentReference = currentReference.get(path[i]);\n    }\n    return currentReference;\n  };\n\n  const resetGraph = () => {\n    setGraph(() => {\n      return {\n        nodes: vertices,\n        links: edges,\n      };\n    });\n  };\n\n  const insertDataFromGun = async (path, parentId) => {\n    resetGraph();\n    const graph = await getDataFromGun(path, parentId);\n\n    console.log(graph.vertices);\n    console.log(graph.edges);\n\n    setGraph(() => {\n      return {\n        nodes: graph.vertices || vertices,\n        links: graph.edges || edges,\n      };\n    });\n    removeUnreferencedNode('gun');\n  };\n\n  const addGunListener = (soul) => {\n    if (!gunListeners.has(soul)) {\n      console.log('Added listener to node: ' + soul);\n      gun.get(soul).on(handleNodeChange, { change: true });\n      gunListeners.add(soul);\n    }\n  };\n\n  const removeUnreferencedNode = (soul) => {\n    console.log(`Removing unreferenced Nodes`);\n    const index = graph.links.findIndex((edge) => edge.target === soul);\n    console.log(`Node still referenced?: ${index === -1 ? 'No' : 'Yes'}`);\n    if (index === -1) {\n      removeNode(soul);\n    }\n  };\n\n  const removeNode = (soul) => {\n    gun.get(soul).off();\n    setGraph((data) => {\n      let nodes = data.nodes;\n      if (nodes.length <= 1) {\n        console.warn(\n          `Didn't delete node \"${soul}\", it is the last node`\n        );\n        return data;\n      }\n      console.log(`Searching node with soul: ${soul}`);\n      const nodeId = nodes.findIndex((node) => node.id === soul);\n      if (nodeId === -1) {\n        console.error(`No node found!`);\n        return data;\n      }\n      console.log(`Removing node at index: ${nodeId}`);\n      nodes.splice(nodeId, 1);\n      return { ...data, nodes: nodes };\n    });\n  };\n\n  const handleNodeChange = (change) => {\n    setGraph((data) => {\n      const id = change['_']['#'];\n\n      console.log(`Setting data of node: \"${id}\"`);\n\n      if (!data) return data;\n\n      let oldNodes = data.nodes;\n      let oldLinks = data.links;\n\n      const idx = oldNodes.findIndex((node) => node.id === id);\n\n      if (idx === -1) {\n        console.error('id not found');\n        return data;\n      }\n      console.log(`Found node with index: \"${idx}\"`);\n\n      let newProps = {};\n      let newVertices = [];\n      let newEdges = [];\n      let propsToRemove = [];\n\n      for (const prop in change) {\n        // Ignore the soul\n        if (prop === '_') continue;\n        // Is this property currently given to a child node?\n        const childEdgeIndex = oldLinks.findIndex((edge) => {\n          return edge.label === prop && edge.source === id;\n        });\n        // If so, remove the edge\n        if (childEdgeIndex !== -1) {\n          removeUnreferencedNode(oldLinks[childEdgeIndex].target);\n          oldLinks.splice(childEdgeIndex, 1);\n        }\n        // Property is new child Node\n        const propVal = change[prop];\n        if (propVal && propVal['#'] !== undefined) {\n          // Add new node\n          const newNodeSoul = propVal['#'];\n          newVertices.push({\n            id: newNodeSoul,\n            props: {},\n          });\n          newEdges.push({\n            source: id,\n            target: newNodeSoul,\n            label: prop,\n          });\n          addGunListener(newNodeSoul);\n          // Remove old property from parent if it exists\n          if (oldNodes[idx].props[prop] !== undefined) {\n            propsToRemove.push(prop);\n          }\n          continue;\n        }\n        // Add property to node props\n        newProps[prop] = change[prop];\n      }\n\n      console.log('Adding props');\n      console.log(newProps);\n\n      for (const p in oldNodes[idx]['props']) {\n        if (!propsToRemove.includes(p) && newProps[p] === undefined) {\n          newProps[p] = oldNodes[idx]['props'][p];\n        }\n      }\n\n      oldNodes[idx]['props'] = newProps;\n\n      oldNodes.push(...newVertices);\n      oldLinks.push(...newEdges);\n\n      console.log('New nodes');\n      console.log(oldNodes);\n\n      return {\n        nodes: oldNodes,\n        links: oldLinks,\n      };\n    });\n  };\n\n  const getDataFromGun = async (path, parentId) => {\n    return new Promise(async (resolve, reject) => {\n      let graph = { vertices: [], edges: [] };\n      getPath(path).once(async (nodeProperties) => {\n        const soul = nodeProperties['_']['#'];\n\n        addGunListener(soul);\n\n        let props = {};\n        for (let prop in nodeProperties) {\n          if (prop === '_') continue;\n          if (\n            nodeProperties[prop] &&\n            nodeProperties[prop]['#'] !== undefined\n          ) {\n            const childSoul = nodeProperties[prop]['#'];\n            // If the vertex is already listed (referenceed multiple times)\n            if (\n              graph.vertices.findIndex(\n                (vertex) => vertex.id === childSoul\n              ) !== -1\n            ) {\n              graph.edges.push({\n                source: soul,\n                target: childSoul,\n                label: prop,\n              });\n              continue;\n            }\n            let childGraph = await getDataFromGun(\n              [...path, prop],\n              soul\n            );\n            graph.vertices = [\n              ...graph.vertices,\n              ...childGraph.vertices,\n            ];\n            graph.edges = [...graph.edges, ...childGraph.edges];\n            continue;\n          }\n          props[prop] = nodeProperties[prop];\n        }\n        graph.vertices.push({\n          id: soul,\n          props,\n        });\n        if (parentId !== null) {\n          graph.edges.push({\n            source: parentId,\n            target: soul,\n            label: path[path.length - 1],\n          });\n        }\n        console.log('Got Data from Graph:');\n        console.log(graph);\n\n        resolve(graph);\n      });\n    });\n  };\n\n  const graphConfig = {\n    width: 800,\n    height: 800,\n    directed: true,\n    nodeHighlightBehavior: true,\n    staticGraphWithDragAndDrop: false, // If false, can be removed\n    automaticRearrangeAfterDropNode: false, // If false, can be removed\n    node: {\n      renderLabel: false,\n      size: 1000,\n      viewGenerator: (node) => <Vertex node={node} />,\n    },\n    link: {\n      highlightColor: 'blue',\n      renderLabel: true,\n      highlightFontWeight: 'bold',\n      semanticStrokeWidth: true,\n      fontSize: 12,\n    },\n    d3: {\n      gravity: -1000,\n      linkLength: 50,\n    },\n  };\n\n  const windowStyle = {\n    backgroundColor: '#282828',\n    padding: '2px',\n  };\n\n  const graphStyle = {\n    backgroundColor: '#FFF',\n  };\n\n  console.log('graph:', graph);\n  window.graph = graph;\n\n  return (\n    <div className=\"App\">\n      <h1>GunDB Overview</h1>\n      <label>Endpoint</label>\n      <br />\n      <input\n        value={endpoint}\n        onChange={(ev) => {\n          setEndpoint(ev.target.value);\n        }}\n        type=\"text\"\n      />\n      <br />\n      <label>Root</label>\n      <br />\n      <input\n        value={root}\n        onChange={(ev) => {\n          setRoot(ev.target.value);\n        }}\n        type=\"text\"\n      />\n      <br />\n      <button onClick={() => insertDataFromGun([root], null)}>\n        Load Data from Gun\n      </button>\n      <button onClick={() => loadEndpoint()}>Load Endpoint</button>\n\n      <button onClick={() => toggleValues()}>Toggle Values</button>\n\n      <div style={{ height: \"1100px\" }}>\n        <MyResponsiveBubble root={getRootData(graph, valuesEnabled)} />\n      </div>\n\n      {/*<div style={windowStyle}>*/}\n      {/*  <div style={graphStyle}>*/}\n      {/*    <Graph id=\"graph-id\" data={graph} config={graphConfig} />*/}\n      {/*  </div>*/}\n      {/*</div>*/}\n\n    </div>\n  );\n}\n\nconst getRootData = (graph, valuesEnabled) => {\n  const newGraph = {\n    \"name\": \"root\",\n    label: 'root',\n    color: `hsl(0, 70%, 50%)`,\n    loc: 1\n  };\n\n  for (const node of graph.nodes) {\n    const innerNodes = node.id.split(\"/\");\n\n    let currObj = newGraph;\n    for (let i = 0; i < innerNodes.length; i++) {\n      const innerNode = innerNodes[i];\n\n      let currCurrObj = (currObj.children || []).find((x) => x.label2 === innerNode)\n\n      if (i === innerNodes.length - 1) {\n      }\n\n      if (!currCurrObj) {\n        let x = {\n          fullPath: node.id,\n          name: innerNode,\n          label: innerNode,\n          label2: innerNode,\n          // color: `hsl(${Math.round(255 * Math.random())}, 70%, 50%)`,\n          loc: 15\n        }\n        currObj.children = [...currObj.children || [], x];\n        currObj = x;\n      } else {\n        currObj = currCurrObj;\n      }\n\n      const valueOn = 3;\n      const valueOff = 0.3;\n\n      if (i === innerNodes.length - 1) {\n        const propsText = JSON.stringify(node.props, null, 4).replace(/\\\\/g, \"\");\n\n        currObj.fullPath = node.id;\n        currObj.label2 = innerNode;\n        currObj.name = `${node.id}\\r\\n\\r\\n | ${propsText}`;\n        currObj.label = !valuesEnabled ? `${innerNodes[i - 1]}/${innerNode}` : currObj.name;\n        // currObj.color = `hsl(${Math.round(255 * Math.random())}, 70%, 50%)`;\n        currObj.loc = Object.keys(node.props).length > 0 ? valueOn : valueOff;\n        // currObj.children = currObj.loc !== 3 ? currObj.children : [\n        //   {\n        //     fullPath: node.id,\n        //     name: innerNode,\n        //     label: propsText,\n        //     loc: 3\n        //   }\n        // ]\n      } else {\n        if (!currObj.children) {\n          currObj.children = [\n            {\n              fullPath: node.id,\n              name: innerNode,\n              label: innerNode,\n              loc: valueOff\n            }\n          ]\n        }\n      }\n\n      if ((currObj.children || []).length > 1\n        && currObj.children.find((x) => x.loc === valueOn)\n        && !currObj.children.find((x) => x.loc === valueOff && (x.children || []).length > 0)) {\n        currObj.children = currObj.children.filter((x) => x.loc !== valueOff)\n      }\n    }\n  }\n\n  return newGraph;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}